scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=-1.0, hjust=0.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
setwd("D:/Sanjay S/KM/DataScienceProjects/RepResearch/RepData_PeerAssessment2")
library(dplyr)
library(ggplot2)
library(grid)
library(gridExtra)
noaaStormData <- read.csv("./data/StormData.csv")
neededColumns <- c("BGN_DATE", "EVTYPE", "FATALITIES",
"INJURIES", "PROPDMG", "PROPDMGEXP",
"CROPDMG", "CROPDMGEXP")
essentialStormData <- noaaStormData[, neededColumns]
names(essentialStormData) <- c("Date", "EventType", "Fatalities",
"Injuries", "PropertyDamage", "PropertyDamageUnit",
"CropDamage", "CropDamageUnit")
essentialStormData$Year <- as.numeric(format(as.Date(essentialStormData$Date, format = "%m/%d/%Y %H:%M:%S"), "%Y"))
unitConversion <- function(dataset = testdata, amount, unit) {
multiplier <- paste(amount, "Multiplier", sep = "")
newAmount <- paste(amount, "New", sep = "")
dataset[multiplier] <- 0
logic <- !is.na(toupper(dataset[, unit]))
dataset[logic & toupper(dataset[, unit]) == "B", multiplier] <- "9"
dataset[logic & toupper(dataset[, unit]) == "9", multiplier] <- "9"
dataset[logic & toupper(dataset[, unit]) == "8", multiplier] <- "8"
dataset[logic & toupper(dataset[, unit]) == "7", multiplier] <- "7"
dataset[logic & toupper(dataset[, unit]) == "M", multiplier] <- "6"
dataset[logic & toupper(dataset[, unit]) == "6", multiplier] <- "6"
dataset[logic & toupper(dataset[, unit]) == "5", multiplier] <- "5"
dataset[logic & toupper(dataset[, unit]) == "4", multiplier] <- "4"
dataset[logic & toupper(dataset[, unit]) == "H", multiplier] <- "2"
dataset[logic & toupper(dataset[, unit]) == "K", multiplier] <- "3"
dataset[logic & toupper(dataset[, unit]) == "3", multiplier] <- "3"
dataset[logic & toupper(dataset[, unit]) == "2", multiplier] <- "2"
dataset[logic & toupper(dataset[, unit]) == "1", multiplier] <- "1"
dataset[logic & toupper(dataset[, unit]) == "", multiplier]  <- "0"
dataset[is.na(dataset[unit]), multiplier] <- 0
dataset[newAmount] <- dataset[,amount] * 10^as.numeric(dataset[,multiplier])
return(dataset)
}
essentialStormData <- unitConversion(essentialStormData,"PropertyDamage", "PropertyDamageUnit")
essentialStormData <- unitConversion(essentialStormData,"CropDamage", "CropDamageUnit")
CutOffYear <- 1995
essentialStormData <- essentialStormData[essentialStormData$Year > CutOffYear,]
LastYear <- max(essentialStormData$Year)
essentialStormData$DamageEventGroup <- NA
StormDamageDataGroup  <- essentialStormData
StormDamageDataGroup[grepl("precipitation|rain|hail|drizzle|wet|precip|burst|depression|fog|wall cloud",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Precipitation & Fog"
StormDamageDataGroup[grepl("dust|saharan|wind|storm|wnd|hurricane|typhoon",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Wind & Storm"
StormDamageDataGroup[grepl("slide|erosion|slump",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Landslide & Erosion"
StormDamageDataGroup[grepl("warmth|warm|heat|dry|hot|drought|thermia|temperature record|record temperature|record high",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Heat & Drought"
StormDamageDataGroup[grepl("cold|cool|ice|icy|frost|freeze|snow|winter|wintry|wintery|blizzard|chill|freezing|avalanche|glaze|sleet",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Snow & Ice"
StormDamageDataGroup[grepl("flood|surf|blow-out|swells|fld|dam break",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Flooding & Dam breaks"
StormDamageDataGroup[grepl("seas|high water|tide|tsunami|wave|current|marine|drowning",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Seas & Oceanic affects"
StormDamageDataGroup[grepl("tstm|thunderstorm|lightning|tornado|spout|funnel|whirlwind",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Tornado & Thunderstorm"
StormDamageDataGroup[grepl("fire|smoke|volcanic",
StormDamageDataGroup$EventType, ignore.case = TRUE),
"DamageEventGroup"] <- "Fire & Volcanic activity"
# remove uncategorized records (DamageEventGroup == NA) & cast as factor
StormDamageDataGroup <- StormDamageDataGroup[complete.cases(StormDamageDataGroup[, "DamageEventGroup"]), ]
StormDamageDataGroup$DamageEventGroup <- as.factor(StormDamageDataGroup$DamageEventGroup)
groups <- levels(StormDamageDataGroup$DamageEventGroup)
TotalLifeDamage <- aggregate(cbind(Fatalities,Injuries) ~ DamageEventGroup,
data=StormDamageDataGroup,
FUN=sum, na.rm=TRUE)
TotalLifeDamage <- TotalLifeDamage[order(TotalLifeDamage$Injuries,
decreasing=TRUE),]
rownames(TotalLifeDamage$DamageEventGroup) <- NULL
TotalLifeDamage$DamageEventGroup <- factor(TotalLifeDamage$DamageEventGroup,
levels = rev(TotalLifeDamage$DamageEventGroup))
TotalEconomicDamage <- aggregate(cbind(PropertyDamageNew, CropDamageNew) ~ DamageEventGroup,
data=StormDamageDataGroup, FUN=sum, na.rm=TRUE)
TotalEconomicDamage <- TotalEconomicDamage[order(TotalEconomicDamage$CropDamageNew,
decreasing=TRUE),]
rownames(TotalEconomicDamage$DamageEventGroup) <- NULL
TotalEconomicDamage$DamageEventGroup <- factor(TotalEconomicDamage$DamageEventGroup,
levels = rev(TotalEconomicDamage$DamageEventGroup))
TotalEconomicDamage$PropertyDamageMns <- as.numeric(TotalEconomicDamage$PropertyDamageNew/1000000)
TotalEconomicDamage$CropDamageMns <- as.numeric(TotalEconomicDamage$CropDamageNew/1000000)
plotTitle1 = paste(c("Injuries & Fatalities to humans due to weather events from:",CutOffYear," to:",LastYear), collapse = " ")
g.LifeLabels <- ggplot(data=TotalLifeDamage, aes(x=1,y=DamageEventGroup)) +
geom_text(aes(label=DamageEventGroup), size=4) +
ggtitle("") +
ylab(NULL) +
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065)) +
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(1,-1,1,-1), "mm"))
# add left chart with injuries
yLim1 <- max(TotalLifeDamage$Injuries+100)
g.Injuries <- ggplot(data=TotalLifeDamage,
aes(x=DamageEventGroup,
y=Injuries),
fill = factor(Injuries)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(aes(label=Injuries), size=3, vjust=0.5, hjust=0.0) +
ggtitle("Injuries") +
scale_y_continuous(limits = c(0,yLim1), breaks = seq(0,yLim1,5000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
#           plot.margin = unit(c(1,0,1,0), "mm"))
# add right chart with fatalities
yLim2 <- max(TotalLifeDamage$Fatalities+100)
g.Fatalities <- ggplot(data=TotalLifeDamage,
aes(x=DamageEventGroup, y=Fatalities, fill = factor(DamageEventGroup))) +
geom_bar(stat = "identity") +
geom_text(aes(label=Fatalities), size=3, vjust=0.5, hjust=0.0) +
ggtitle("Fatalities") +
coord_flip() +
scale_y_continuous(limits = c(0,yLim2), breaks = seq(0, yLim2, 500)) +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
#           plot.margin = unit(c(1,1,1,-1), "mm"))
# combine charts in one plot
Layout1 = grid.layout(2, 3, heights = unit(c(0.3,7), "inches"), widths = unit(c(5,2.5,5), "inches"))
Layout2 = grid.layout(2, 3, heights = unit(c(0.3,7), "inches"), widths = unit(c(5,2,5.5), "inches"))
plotLayout <- function(x, y) viewport(layout.pos.row = x,
layout.pos.col = y)
multiplot <- function(Layout, a, b, c, d) {
grid.newpage()
pushViewport(viewport(layout = Layout))
grid.text(plotTitle, vp = viewport(layout.pos.row = 1, layout.pos.col = 1:3))
print(b, vp = plotLayout(2, 1))
print(c, vp = plotLayout(2, 2))
print(d, vp = plotLayout(2, 3))
}
multiplot(Layout1,plotTitle1,  g.Injuries, g.LifeLabels, g.Fatalities)
plotTitle2 = paste(c("Main Title:",CutOffYear," to:",LastYear), collapse = " ")
g.EconLabels <- ggplot(data=TotalEconomicDamage, aes(x=1,y=DamageEventGroup)) +
geom_text(aes(label=DamageEventGroup), size=4) +
ggtitle("") +
ylab(NULL) +
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065)) +
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(0,0,0,0), "mm"))
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=-1.0, hjust=0.0) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=-1.0, hjust=0.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
multiplot(Layout1,plotTitle1,  g.Injuries, g.LifeLabels, g.Fatalities)
plotTitle1 = paste(c("Injuries & Fatalities to humans due to weather events from:",CutOffYear," to:",LastYear), collapse = " ")
plotLayout <- function(x, y) viewport(layout.pos.row = x,
layout.pos.col = y)
plotTitle2 = paste(c("Main Title:",CutOffYear," to:",LastYear), collapse = " ")
g.EconLabels <- ggplot(data=TotalEconomicDamage, aes(x=1,y=DamageEventGroup)) +
geom_text(aes(label=DamageEventGroup), size=4) +
ggtitle("") +
ylab(NULL) +
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065)) +
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(0,0,0,0), "mm"))
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=-1.0, hjust=0.0) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=-1.0, hjust=0.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
plotTitle1 = paste(c("Injuries & Fatalities to humans due to weather events from:",CutOffYear," to:",LastYear), collapse = " ")
multiplot <- function(Layout, a, b, c, d) {
grid.newpage()
pushViewport(viewport(layout = Layout))
grid.text(a, vp = viewport(layout.pos.row = 1, layout.pos.col = 1:3))
print(b, vp = plotLayout(2, 1))
print(c, vp = plotLayout(2, 2))
print(d, vp = plotLayout(2, 3))
}
multiplot(Layout1,plotTitle1,  g.Injuries, g.LifeLabels, g.Fatalities)
plotTitle2 = paste(c("Main Title:",CutOffYear," to:",LastYear), collapse = " ")
g.EconLabels <- ggplot(data=TotalEconomicDamage, aes(x=1,y=DamageEventGroup)) +
geom_text(aes(label=DamageEventGroup), size=4) +
ggtitle("") +
ylab(NULL) +
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065)) +
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(0,0,0,0), "mm"))
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=-1.0, hjust=0.0) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=-1.0, hjust=0.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=0.0, hjust=-1.0) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=0.0, hjust=-1.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=0.0, hjust=2.0) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=0.0, hjust=2.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=0.0, hjust=1.0) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=0.0, hjust=1.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
TotalEconomicDamage
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=0.0, hjust=0.5) +
ggtitle("Property Damage in millions") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=0.0, hjust=0.0)) +
ggtitle("Crop Damage in millions") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
plotTitle2 = paste(c("Damage to Crops and Property due to weather from:",CutOffYear," to:",LastYear), collapse = " ")
g.EconLabels <- ggplot(data=TotalEconomicDamage, aes(x=1,y=DamageEventGroup)) +
geom_text(aes(label=DamageEventGroup), size=4) +
ggtitle("") +
ylab(NULL) +
scale_x_continuous(expand=c(0,0),limits=c(0.94,1.065)) +
theme(axis.title=element_blank(),
panel.grid=element_blank(),
axis.text.y=element_blank(),
axis.ticks.y=element_blank(),
panel.background=element_blank(),
axis.text.x=element_text(color=NA),
axis.ticks.x=element_line(color=NA),
plot.margin = unit(c(0,0,0,0), "mm"))
yLim3 <- max((TotalEconomicDamage$PropertyDamageNew/1000000)+500)
g.Property <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=PropertyDamageNew/1000000,
label=sprintf("%0.2f", round(PropertyDamageNew/1000000, digits = 2))),
fill = factor(round(PropertyDamageNew/1000000, digits = 2))) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(PropertyDamageNew/1000000, digits = 2)),vjust=0.0, hjust=0.5) +
ggtitle("Property Damage (in USD million)") +
scale_y_continuous(limits = c(0,yLim3), breaks = seq(0,yLim3,25000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
yLim4 <- max(TotalEconomicDamage$CropDamageMns+100)
g.Crop <- ggplot(data=TotalEconomicDamage,
aes(x=DamageEventGroup,
y=CropDamageMns),
fill = factor(CropDamageMns)) +
geom_bar(stat = "identity", aes(fill = factor(DamageEventGroup))) +
geom_text(size=3, aes(label=round(CropDamageMns, digits = 2), vjust=0.0, hjust=0.0)) +
ggtitle("Crop Damage (in USD million)") +
scale_y_continuous(limits = c(0,yLim4), breaks = seq(0,yLim4,2000)) +
coord_flip() +
theme(axis.title.x = element_blank(),
axis.title.y = element_blank(),
axis.text.y = element_blank(),
axis.ticks.y = element_blank(),
legend.position = "none")
multiplot(Layout2, plotTitle2, g.Crop, g.EconLabels,g.Property)
knitr::opts_chunk$set(echo = TRUE)
groups <- levels(StormDamageDataGroup$DamageEventGroup)
TotalEconomicDamage
x <- 13860159500
x/1000000
TotalEconomicDamage
x <- 159875724170
x/1000000
sum(TotalEconomicDamage$PropertyDamageNew)
sum(TotalEconomicDamage$PropertyDamageNew)/1000000
q()
